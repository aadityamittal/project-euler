package euler;
/*
Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. 
What is the value of this product?
*/
public class Program8 {

	public static void main(String[] args) {
		String a;
		a="73167176531330624919225119674426574742355349194934"
		 +"96983520312774506326239578318016984801869478851843"
				+"85861560789112949495459501737958331952853208805511"
				+"12540698747158523863050715693290963295227443043557"
				+"66896648950445244523161731856403098711121722383113"
				+"62229893423380308135336276614282806444486645238749"
				+"30358907296290491560440772390713810515859307960866"
				+"70172427121883998797908792274921901699720888093776"
				+"65727333001053367881220235421809751254540594752243"
				+"52584907711670556013604839586446706324415722155397"
				+"53697817977846174064955149290862569321978468622482"
				+"83972241375657056057490261407972968652414535100474"
				+"82166370484403199890008895243450658541227588666881"
				+"16427171479924442928230863465674813919123162824586"
				+"17866458359124566529476545682848912883142607690042"
				+"24219022671055626321111109370544217506941658960408"
				+"07198403850962455444362981230987879927244284909188"
				+"84580156166097919133875499200524063689912560717606"
				+"05886116467109405077541002256983155200055935729725"
				+"71636269561882670428252483600823257530420752963450";
		System.out.println(a);
		System.out.println(a.length());
		int i;
		long k=0L,p;
		char m,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13;
		m=m1=m2=m3=m4=m5=m6=m7=m8=m9=m10=m11=m12=m13='g';
		for(i=0;i+13<a.length();i++)
		{
			p=1L;
			for(int j=i;j<13+i;j++)
			   p=p*(a.charAt(j)-'0');
			if(p>k)
			{	k=p;
			   m=a.charAt(i+0);
			   m1=a.charAt(i+1);
			   m2=a.charAt(i+2);
			   m3=a.charAt(i+3);
			   m4=a.charAt(i+4);
			   m5=a.charAt(i+5);
			   m6=a.charAt(i+6);
			   m7=a.charAt(i+7);
			   m8=a.charAt(i+8);
			   m9=a.charAt(i+9);
			   m10=a.charAt(i+10);
			   m11=a.charAt(i+11);
			   m12=a.charAt(i+12);
			}
			
		}
		System.out.println(m+" "+m1+" "+m2+" "+m3+" "+m4+" "+m5+" "+m6+" "+m7+" "+m8+" "+m9+" "+m10+" "+m11+" "+m12);
		System.out.println("Required Solution="+k);
	}

}

//Output:23514624000




